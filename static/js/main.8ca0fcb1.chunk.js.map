{"version":3,"sources":["Header/Header.js","Feed/Post/TagList/TagList.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","models/post.model.js","CreatePost/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Component","TagList","this","props","tags","map","tag","index","key","Post","user","format","created","src","image","alt","likes","title","Feed","state","posts","isLoading","fetch","then","res","json","setState","color","size","sizeUnit","post","userId","Profile","schema","yup","shape","min","max","required","CreatePost","values","console","log","initialValues","validationSchema","postModel","onSubmit","submit","bind","Group","controlId","Label","type","name","htmlFor","placeholder","component","value","onChange","handleTagsChange","Button","variant","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ca0fcb1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./Header.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">Instagram</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                        <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\r\n                        <Link className=\"nav-link\" to=\"/post/create\">Create Post</Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport './TagList.scss'\r\n\r\nclass TagList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"TagList\">\r\n                {this.props.tags.map((tag, index) => {\r\n                    return <div key={index} className=\"tag\">\r\n                        <a href=\"#\">#{tag}</a>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TagList;","import React, {Component} from 'react';\r\nimport Moment from 'react-moment';\r\nimport \"./Post.scss\";\r\nimport { FaUserCircle, FaRegHeart, FaRegComment, FaRegShareSquare, FaRegBookmark } from 'react-icons/all';\r\nimport TagList from \"./TagList/TagList\";\r\n\r\n\r\nclass Post extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"post-header\">\r\n                    <div className=\"user-details\">\r\n                        <FaUserCircle className=\"user-icon\"/>\r\n                        <h4 className=\"user-id\">{this.props.user}</h4>\r\n                    </div>\r\n                    <div className=\"created\">\r\n                        <Moment format=\"MMM DD, YYYY\">{this.props.created}</Moment>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={this.props.image} alt=\"image\" className=\"post-image\" />\r\n                <div className=\"post-reactions\">\r\n                    <div className=\"like-comment-share\">\r\n                        <button className=\"action-button\">\r\n                            <FaRegHeart className=\"icon\" />\r\n                        </button>\r\n                        <button className=\"action-button\">\r\n                            <FaRegComment className=\"icon\" />\r\n                        </button>\r\n                        <button className=\"action-button\">\r\n                            <FaRegShareSquare className=\"icon\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"bookmark\">\r\n                        <button className=\"action-button\">\r\n                            <FaRegBookmark className=\"icon\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"post-details\">\r\n                    <span className=\"post-likes\">{this.props.likes} Likes</span>\r\n                    <p className=\"post-title\">{this.props.title}</p>\r\n                    <TagList tags={this.props.tags} className=\"tags-list\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport \"./Feed.scss\";\r\nimport Post from \"./Post/Post\";\r\nimport {BeatLoader} from 'react-spinners';\r\n\r\nclass Feed extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts:[],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://my-json-server.typicode.com/evyros/fake-api/posts\")\r\n            .then(res => res.json())\r\n            .then(posts => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    posts\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoading) {\r\n            return (\r\n                <div className=\"loader\">\r\n                    <BeatLoader\r\n                        color={'#faebd7'}\r\n                        size={'25'}\r\n                        sizeUnit={'px'}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"Feed\">\r\n                {this.state.posts.map((post, index) => {\r\n                    return <Post\r\n                        user={post.userId}\r\n                        image={post.image}\r\n                        title={post.title}\r\n                        likes={post.likes}\r\n                        tags={post.tags}\r\n                        created={post.created}\r\n                        key={index}/>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feed;","import React, {Component} from 'react';\r\nimport \"./Profile.scss\";\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Profile\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import * as yup from 'yup';\r\n\r\nlet schema = yup.object().shape({\r\n    title: yup.string().min(2).max(255).required(),\r\n    image: yup.mixed().required(),\r\n    tags: yup.string()\r\n});\r\n\r\nexport default schema;","import React, {Component} from 'react';\r\nimport './CreatePost.scss';\r\nimport { Form as BForm, Button } from 'react-bootstrap';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport postModel from '../models/post.model';\r\nimport {FaCloudUploadAlt, FaFileImage, FaRegLightbulb} from \"react-icons/all\";\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nclass CreatePost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tags: []\r\n        }\r\n    }\r\n\r\n    handleTagsChange(tags) {\r\n        this.setState({\r\n            tags: tags\r\n        })\r\n    }\r\n\r\n    submit(values) {\r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-post\">\r\n                {/*<h2 className=\"form-title\">Create Post:</h2>*/}\r\n                <Formik initialValues={{image: '', title: '', tags: ''}}\r\n                        validationSchema={postModel}\r\n                        onSubmit={this.submit.bind(this)}>\r\n                    <Form className=\"col-xs-12 col-sm-6\">\r\n                        <h2 className=\"form-title\">Create Post:</h2>\r\n                        <BForm.Group controlId=\"formBasicFile\">\r\n                            <BForm.Label>Load Image:</BForm.Label>\r\n                            <Field type=\"file\" name=\"image\" id=\"image\" className=\"form-control-image\"/>\r\n                            <label htmlFor=\"image\" className=\"upload-btn\">\r\n                                <span>\r\n                                    <FaFileImage className=\"upload-icon\"/>\r\n                                    Select your image...\r\n                                </span>\r\n                            </label>\r\n                            {/*<br/><Button variant=\"primary\" className=\"upload-btn\">*/}\r\n                            {/*    <FaFileImage className=\"upload-icon\"/>*/}\r\n                            {/*    Select your image...*/}\r\n                            {/*</Button>*/}\r\n                        </BForm.Group>\r\n                        <BForm.Group controlId=\"formBasicEmail\">\r\n                            <BForm.Label>Post Title:</BForm.Label>\r\n                            <Field name=\"title\" className=\"form-control\" placeholder=\"Place your post title here\"/>\r\n                            <ErrorMessage className=\"alert alert-danger\" name=\"title\" component=\"div\" />\r\n                        </BForm.Group>\r\n                        <BForm.Group controlId=\"formBasicEmail\">\r\n                            <BForm.Label>Post Tags:</BForm.Label>\r\n                            {/*<Field*/}\r\n                            {/*    name=\"tags\"*/}\r\n                            {/*    className=\"form-control\"*/}\r\n                                <TagsInput\r\n                                value={this.state.tags}\r\n                                onChange={this.handleTagsChange.bind(this)}\r\n                                className=\"tags-input\"\r\n                                />\r\n                            <FaRegLightbulb/><span>Press Enter for each tag</span>\r\n                            {/*/>*/}\r\n                        </BForm.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" className=\"share-btn\">\r\n                            <FaCloudUploadAlt className=\"share-icon\" />\r\n                            Upload your post...\r\n                        </Button>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePost;","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <main className=\"container\">\n            <Switch>\n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/post/create\">\n                <CreatePost />\n              </Route>\n              <Route path=\"/\">\n                <Feed />\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </Router>\n\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}